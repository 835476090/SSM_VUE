<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sw.dao.GoodsDao">
	<resultMap id="BaseResultMap" type="com.sw.model.Goods">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		<id column="goodsid" jdbcType="INTEGER" property="goodsid" />
		<result column="goodsclass" jdbcType="VARCHAR"
			property="goodsclass" />
		<result column="goodsname" jdbcType="VARCHAR"
			property="goodsname" />
		<result column="purchaseprice" jdbcType="DECIMAL"
			property="purchaseprice" />
		<result column="price" jdbcType="DECIMAL" property="price" />
		<result column="unit" jdbcType="VARCHAR" property="unit" />
		<result column="brand" jdbcType="VARCHAR" property="brand" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		goodsid, goodsclass, goodsname, purchaseprice, price, unit, brand,
		remark
	</sql>
	<select id="selectByExample"
		parameterType="com.sw.model.GoodsExample" resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from goods
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		select
		<include refid="Base_Column_List" />
		from goods
		where goodsid = #{goodsid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		delete from goods
		where goodsid = #{goodsid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.sw.model.GoodsExample">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		delete from goods
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.sw.model.Goods">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		insert into goods (goodsid, goodsclass, goodsname,
		purchaseprice, price, unit,
		brand, remark)
		values (#{goodsid,jdbcType=INTEGER}, #{goodsclass,jdbcType=VARCHAR},
		#{goodsname,jdbcType=VARCHAR},
		#{purchaseprice,jdbcType=DECIMAL}, #{price,jdbcType=DECIMAL}, #{unit,jdbcType=VARCHAR},
		#{brand,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.sw.model.Goods">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		insert into goods
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="goodsid != null">
				goodsid,
			</if>
			<if test="goodsclass != null">
				goodsclass,
			</if>
			<if test="goodsname != null">
				goodsname,
			</if>
			<if test="purchaseprice != null">
				purchaseprice,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="unit != null">
				unit,
			</if>
			<if test="brand != null">
				brand,
			</if>
			<if test="remark != null">
				remark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="goodsid != null">
				#{goodsid,jdbcType=INTEGER},
			</if>
			<if test="goodsclass != null">
				#{goodsclass,jdbcType=VARCHAR},
			</if>
			<if test="goodsname != null">
				#{goodsname,jdbcType=VARCHAR},
			</if>
			<if test="purchaseprice != null">
				#{purchaseprice,jdbcType=DECIMAL},
			</if>
			<if test="price != null">
				#{price,jdbcType=DECIMAL},
			</if>
			<if test="unit != null">
				#{unit,jdbcType=VARCHAR},
			</if>
			<if test="brand != null">
				#{brand,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.sw.model.GoodsExample" resultType="java.lang.Long">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		select count(*) from goods
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		update goods
		<set>
			<if test="record.goodsid != null">
				goodsid = #{record.goodsid,jdbcType=INTEGER},
			</if>
			<if test="record.goodsclass != null">
				goodsclass = #{record.goodsclass,jdbcType=VARCHAR},
			</if>
			<if test="record.goodsname != null">
				goodsname = #{record.goodsname,jdbcType=VARCHAR},
			</if>
			<if test="record.purchaseprice != null">
				purchaseprice = #{record.purchaseprice,jdbcType=DECIMAL},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=DECIMAL},
			</if>
			<if test="record.unit != null">
				unit = #{record.unit,jdbcType=VARCHAR},
			</if>
			<if test="record.brand != null">
				brand = #{record.brand,jdbcType=VARCHAR},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		update goods
		set goodsid = #{record.goodsid,jdbcType=INTEGER},
		goodsclass = #{record.goodsclass,jdbcType=VARCHAR},
		goodsname = #{record.goodsname,jdbcType=VARCHAR},
		purchaseprice = #{record.purchaseprice,jdbcType=DECIMAL},
		price = #{record.price,jdbcType=DECIMAL},
		unit = #{record.unit,jdbcType=VARCHAR},
		brand = #{record.brand,jdbcType=VARCHAR},
		remark = #{record.remark,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.sw.model.Goods">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		update goods
		<set>
			<if test="goodsclass != null">
				goodsclass = #{goodsclass,jdbcType=VARCHAR},
			</if>
			<if test="goodsname != null">
				goodsname = #{goodsname,jdbcType=VARCHAR},
			</if>
			<if test="purchaseprice != null">
				purchaseprice = #{purchaseprice,jdbcType=DECIMAL},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DECIMAL},
			</if>
			<if test="unit != null">
				unit = #{unit,jdbcType=VARCHAR},
			</if>
			<if test="brand != null">
				brand = #{brand,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
		</set>
		where goodsid = #{goodsid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.sw.model.Goods">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sun Sep 02 
			15:46:59 CST 2018. -->
		update goods
		set goodsclass = #{goodsclass,jdbcType=VARCHAR},
		goodsname = #{goodsname,jdbcType=VARCHAR},
		purchaseprice = #{purchaseprice,jdbcType=DECIMAL},
		price = #{price,jdbcType=DECIMAL},
		unit = #{unit,jdbcType=VARCHAR},
		brand = #{brand,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR}
		where goodsid = #{goodsid,jdbcType=INTEGER}
	</update>

	<!-- 我的sql语句 -->
	<!-- 查询所有的商品 -->
	<select id="goodsALL" resultMap="BaseResultMap">
		select
		*
		from goods
		order by goodsid desc;
	</select>
	<!-- 分页查询所有的商品 -->
	<select id="goodsALLByPage" resultMap="BaseResultMap">
		select
		*
		from goods
		order by goodsid desc
		<choose>
			<when test="page.pageNow &lt;= 1 ">
				limit #{page.pageLimit};
			</when>
			<otherwise>
				limit #{page.mysqlLimitParam1} ,#{page.pageLimit};
			</otherwise>
		</choose>
	</select>
	<!-- 分类查询商品 -->
	<select id="goodsByClass" resultMap="BaseResultMap">
		select
		*
		from goods
		where goodsclass = #{gc} 
		order by goodsid desc
		;
	</select>
	<!-- 分类分页查询商品 -->
	<select id="goodsByClassAndPage" resultMap="BaseResultMap">
		select
		*
		from goods
		
		where goodsclass = #{gc} 
		order by goodsid desc
		<choose>
			<when test="page.pageNow &lt;= 1 ">
				limit #{page.pageLimit};
			</when>
			<otherwise>
				limit #{page.mysqlLimitParam1} ,#{page.pageLimit};
			</otherwise>
		</choose>
	</select>
	<!-- 获取所有分类 -->
	<select id="goodsClassALL" resultType="java.lang.String">
		select
		goodsclass
		from goods
		group by
		goodsclass
	</select>
	<!-- 获取商品表中的最大id -->
	<select id="goodsMaxId" resultType="java.lang.Integer">
		select 
		max(goodsid) 
		from goods
	</select>
	
	<!-- 获取商品表中商品的个数 -->
	<select id="goodsClassCount" resultType="java.lang.Integer">
		select 
		count(*) 
		from goods 
		where goodsclass=#{gc};
	</select>

	
	
	
</mapper>